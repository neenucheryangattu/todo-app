{"version":3,"sources":["component/TodoApp/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["TodoApp","state","input","items","handleChange","event","setState","target","value","storeItems","preventDefault","deleteItem","key","allItems","splice","this","className","onSubmit","type","onChange","placeholder","map","data","index","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAGqBA,E,4MAEjBC,MAAQ,CACHC,MAAM,GACNC,MAAM,I,EAGfC,aAAa,SAAAC,GACT,EAAKC,SAAS,CACVJ,MAAMG,EAAME,OAAOC,S,EAI3BC,WAAa,SAAAJ,GACTA,EAAMK,iBACN,IAAMR,EAAU,EAAKD,MAAfC,MAEN,EAAKI,SAAS,CACVH,MAAM,GAAD,mBAAK,EAAKF,MAAME,OAAhB,CAAsBD,IAC3BA,MAAM,M,EAIdS,WAAW,SAAAC,GACP,IAAMC,EAAS,EAAKZ,MAAME,MAC1BU,EAASC,OAAOF,EAAI,GAEpB,EAAKN,SAAS,CACVH,MAAMU,K,4CAIV,WAAU,IAAD,OACL,EAAoBE,KAAKd,MAAnBC,EAAN,EAAMA,MAAMC,EAAZ,EAAYA,MAEZ,OACI,sBAAKa,UAAU,iBAAf,UAEI,uBAAMA,UAAU,gBAAgBC,SAAUF,KAAKN,WAA/C,UACI,0CACA,uBAAOS,KAAM,OAAOV,MAAON,EAAOiB,SAAUJ,KAAKX,aAAcgB,YAAY,sBAG/E,6BACKjB,EAAMkB,KAAI,SAACC,EAAKC,GAAN,OACP,+BAAiBD,EAAK,mBAAGN,UAAU,mBAAkBQ,QAAS,kBAAI,EAAKb,WAAWY,QAAzEA,e,GA7CIE,aCEtBC,EAFH,kBAAO,cAAC,EAAD,KCSJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e80c1b9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './TodoApp.css'\r\n\r\nexport default class TodoApp extends Component {\r\n\r\n    state = {\r\n         input:'',\r\n         items:[]\r\n    }\r\n\r\nhandleChange=event=>{\r\n    this.setState({\r\n        input:event.target.value\r\n    });\r\n    \r\n}\r\nstoreItems = event => {\r\n    event.preventDefault();\r\n    const{input } = this.state\r\n    \r\n    this.setState({\r\n        items:[...this.state.items,input],\r\n        input:\"\"\r\n    })\r\n    \r\n}\r\ndeleteItem=key=>{\r\n    const allItems=this.state.items\r\n    allItems.splice(key,1)\r\n\r\n    this.setState({\r\n        items:allItems\r\n    })\r\n}\r\n\r\n    render() {\r\n        const{input,items} =this.state;\r\n    \r\n        return (\r\n            <div className=\"todo-container\">\r\n                \r\n                <form className=\"input-section\" onSubmit={this.storeItems}>\r\n                    <h1>Todo App</h1>\r\n                    <input type =\"text\" value={input} onChange={this.handleChange} placeholder=\"Enter items...\"></input>\r\n                    \r\n                </form>\r\n                <ul>\r\n                    {items.map((data,index)=>(\r\n                        <li key={index}>{data}<i className=\"fas fa-trash-alt\"onClick={()=>this.deleteItem(index)}></i></li>\r\n\r\n                    ))}\r\n                    \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport TodoApp from './component/TodoApp/TodoApp'\n\nconst App = ()  => <TodoApp />\n    \nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}